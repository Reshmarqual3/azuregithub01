# This workflow will build a Python app and deploy it to an Azure Functions App on Linux when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure Functions app.
# For instructions see https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-python?pivots=python-mode-configuration
#
# To configure this workflow:
# 1. Set up the following secrets in your repository:
#   - AZURE_FUNCTIONAPP_PUBLISH_PROFILE
# 2. Change env variables for your configuration.
#
# For more information on:
#   - GitHub Actions for Azure: https://github.com/Azure/Actions
#   - Azure Functions Action: https://github.com/Azure/functions-action
#   - Publish Profile: https://github.com/Azure/functions-action#using-publish-profile-as-deployment-credential-recommended
#   - Azure Service Principal for RBAC: https://github.com/Azure/functions-action#using-azure-service-principal-for-rbac-as-deployment-credential
#
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples/tree/master/FunctionApp

name: Deploy Python project to Azure Function App

on:
  push:
    branches: ["main"]

env:
<<<<<<< HEAD:.github/workflows/azure-functions-app-python.yml
  AZURE_FUNCTIONAPP_NAME: 'vscodegithub0001'   # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'       # set this to the path to your function app project, defaults to the repository root
  PYTHON_VERSION: '3.9'                     # set this to the python version to use (e.g. '3.6', '3.7', '3.8')
=======
  AZURE_FUNCTIONAPP_NAME: 'vscodegithub0001'   # Replace with your Azure Function App name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'         # Path to the function app
  PYTHON_VERSION: '3.9'                       
>>>>>>> fa2a7f49835612953b5479bc90b4d689d7742840:.github/workflows/deploy.yml

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

<<<<<<< HEAD:.github/workflows/azure-functions-app-python.yml
    # If you want to use Azure RBAC instead of Publish Profile, then uncomment the task below
    # - name: 'Login via Azure CLI'
    #   uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets.AZURE_RBAC_CREDENTIALS }} # set up AZURE_RBAC_CREDENTIALS secrets in your repository

    - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
=======
    - name: Set up Python
>>>>>>> fa2a7f49835612953b5479bc90b4d689d7742840:.github/workflows/deploy.yml
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

<<<<<<< HEAD:.github/workflows/azure-functions-app-python.yml
    - name: 'Resolve Project Dependencies Using Pip'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
=======
    - name: Install dependencies
      run: |
>>>>>>> fa2a7f49835612953b5479bc90b4d689d7742840:.github/workflows/deploy.yml
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
        popd

<<<<<<< HEAD:.github/workflows/azure-functions-app-python.yml
    - name: 'Run Azure Functions Action'
=======
    - name: Deploy to Azure Function App
>>>>>>> fa2a7f49835612953b5479bc90b4d689d7742840:.github/workflows/deploy.yml
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} # Remove publish-profile to use Azure RBAC
        scm-do-build-during-deployment: true
        enable-oryx-build: true